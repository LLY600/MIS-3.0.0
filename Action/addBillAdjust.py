'''
封装账单调整独立功能
'''

from prettytable import PrettyTable
from time import sleep
from PageObject.addBillAdjustPage import *
from PageObject.tableDataPage import *
from toolKit.log import *
from toolKit.highLightElement import *


def add_bill_adjust(driver, merchantName='', contractName='', billNo='', adjustMoney=''):
	bap = BillAdjustPage(driver)
	logger.info(u'测试账单调整')
	bap.financialManagement().click()
	logger.info(u'点击财务管理')
	bap.billAdjust().click()
	logger.info(u'点击账单调整模块')
	bap.billAdjustMaintain().click()
	logger.info(u'点击账单调整维护')
	driver.switch_to.frame(bap.frameOfBillAdjust())
	sleep(4)
	highLightElement(driver, bap.add())
	bap.add().click()
	logger.info(u'点击添加按钮')
	driver.switch_to.default_content()
	driver.switch_to.frame(bap.frameOfAddBillAdjust())
	sleep(4)
	# highLightElement(driver, bap.merchant())
	try:
		bap.mall().click()
		sleep(0.5)
		bap.mallSelect().click()
		sleep(0.5)
		logger.info(u'选择购物中心')
	except:
		pass
	bap.merchant().click()
	logger.info(u'点击商户名称文本框')
	# highLightElement(driver, bap.merchantInput())
	bap.merchantInput().send_keys(merchantName)
	logger.info(u'输入商户名称：%s' % merchantName)
	highLightElement(driver, bap.merchantSearch())
	bap.merchantSearch().click()
	logger.info(u'点击商户名称搜索按钮')
	sleep(1)
	highLightElement(driver, bap.merchantSearchResult())
	bap.merchantSearchResult().click()
	logger.info(u'选择商户名称搜索结果')
	# highLightElement(driver, bap.contract())
	bap.contract().click()
	logger.info(u'点击合同号文本框')
	# highLightElement(driver, bap.contractInput())
	bap.contractInput().send_keys(contractName)
	logger.info(u'输入合同号：%s' % contractName)
	highLightElement(driver, bap.contractSearch())
	bap.contractSearch().click()
	logger.info(u'点击合同号搜索按钮')
	highLightElement(driver, bap.contractSearchResult())
	bap.contractSearchResult().click()
	logger.info(u'点击合同号搜索结果')
	# highLightElement(driver, bap.settlementGroup())
	bap.settlementGroup().click()
	logger.info(u'点击结算组别文本框')
	highLightElement(driver, bap.settlementGroupSelect())
	bap.settlementGroupSelect().click()
	logger.info(u'选择结算组别')
	# highLightElement(driver, bap.billNo())
	bap.billNo().click()
	logger.info(u'点击账单号文本框')
	# highLightElement(driver, bap.billNoInput())
	bap.billNoInput().send_keys(billNo)
	logger.info(u'输入账单号：%s' % billNo)
	highLightElement(driver, bap.billNoSearch())
	bap.billNoSearch().click()
	logger.info(u'点击账单号搜索按钮')
	highLightElement(driver, bap.billNoSearchResult())
	bap.billNoSearchResult().click()
	logger.info(u'选择账单号搜索结果')
	sleep(1)
	highLightElement(driver, bap.addAdjust())
	bap.addAdjust().click()
	logger.info(u'点击“增加调整信息”按钮')
	highLightElement(driver, bap.costItemBox())
	bap.costItemBox().click()
	logger.info(u'点击费用项目文本框')
	bap.costItemInner().click()
	highLightElement(driver, bap.costItem())
	bap.costItem().click()
	logger.info(u'选择费用项目')
	highLightElement(driver, bap.adjustMonthBox())
	bap.adjustMonthBox().click()
	logger.info(u'点击调整月份文本框')
	bap.adjustMonthInner().click()
	highLightElement(driver, bap.adjustMonth())
	bap.adjustMonth().click()
	logger.info(u'选择调整月份')
	highLightElement(driver, bap.adjustTypeBox())
	bap.adjustTypeBox().click()
	logger.info(u'点击调整类型文本框')
	bap.adjustTypeInner().click()
	highLightElement(driver, bap.adjustType())
	bap.adjustType().click()
	logger.info(u'选择调整类型')
	highLightElement(driver, bap.adjustMoneyBox())
	bap.adjustMoneyBox().click()
	logger.info(u'点击调整金额文本框')
	bap.adjustMoney().send_keys(adjustMoney)
	logger.info(u'输入调整金额：%s' % adjustMoney)
	highLightElement(driver, bap.addButton())
	bap.addButton().click()
	logger.info(u'点击“添加”按钮')
	logger.info(u'提示信息：%s' % (bap.information()))

def get_bill_adjust_data(driver):
	bap = BillAdjustPage(driver)
	bap.informationConfirm().click()
	sleep(1)
	bap = BillAdjustPage(driver)
	driver.switch_to.default_content()
	driver.switch_to.frame(bap.frameOfBillAdjust())
	gtd = GetTableData(driver)
	fileName = listData + 'add_bill_adjust_data.log'
	table = PrettyTable(['购物中心', '状态', '经营商户', '经营店铺', '合同号', '调整账单号', '本次调整金额'])
	table.align['购物中心'] = '1'
	table.padding_width = 1
	table.add_row([gtd.row14(), gtd.row16(), gtd.row17(), gtd.row18(), gtd.row19(), gtd.row110(), gtd.row111()])
	logger.info(u'正在获取列表数据')
	sleep(1)
	print(table)
	with open(fileName, 'w') as file:
		file.write(str(table))
		file.write('\n')
	logger.info(u'将列表数据写入文件，保存位置:%s' % fileName)
